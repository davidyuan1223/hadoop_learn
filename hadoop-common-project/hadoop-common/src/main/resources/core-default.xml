<?xml version="1.0" ?>
<?xml-setype type="text/xsl" href="configuration.xml"?>
<configuration>
    <property>
        <name>hadoop.common.configuration.version</name>
        <value>3.0.0</value>
        <descirption>version of this configuration file</descirption>
    </property>
    <property>
        <name>hadoop.tmp.dir</name>
        <value>/tmp/hadoop-${user.name}</value>
        <descirption>A base for other temporary directories.</descirption>
    </property>
    <property>
        <name>hadoop.http.filter.initializer</name>
        <value>org.apache.hadoop.http.lib.StaticUserWebFilter</value>
        <descirption>A comma separated list of class name.Each class in the list
        must extend org.apache.hadoop.http.FilterInitializer.The corresponding
        Filter will be initialized.Then, the Filter will be applied to all user facing
        jsp and servlet web pages. The ordering of the list defines the ordering of the filters</descirption>
    </property>
    <property>
        <name>hadoop.http.idle_timeout.ms</name>
        <value>60000</value>
        <descirption>NM/JN/DM Server connection timeout in milliseconds.</descirption>
    </property>
    <property>
        <name>hadoop.http.metrics.enable</name>
        <value>true</value>
        <descirption>If true,set Jetty's StatisticHandler to HTTP server to collect
        HTTP layer metrics and register them to Hadoop metrics system.</descirption>
    </property>

    <!-- security properties -->
    <property>
        <name>hadoop.security.authorization</name>
        <value>false</value>
        <descirption>Is service-level authorization enable?</descirption>
    </property>
    <property>
        <name>hadoop.security.instrumentation.requires.admin</name>
        <value>false</value>
        <descirption>
            Indicates if administrator ACLs are required to access
            instrumentation servlets (JMX,METRICS,CONF,STACKS,PROF)
        </descirption>
    </property>
    <property>
        <name>hadoop.security.authentication</name>
        <value>simple</value>
        <descirption>Possible values are simple (no authentication), and kerberos</descirption>
    </property>
    <property>
        <name>http.security.group.mapping</name>
        <value>org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback</value>
        <descirption>
            Class for user to group mapping (get groups for a given user) for ACL.
            The default implementation, org.apache.hadoop.security.JniBasedUnixGroupMappingWithFallback,
            will determine if the Java Native Interface(JNI) is available. If JNI is available the implementation
            will use the API within hadoop to resolve a list of group for a user. If JNI is not available then the shell
            implementation,ShellBasedUnixGroupsMapping,is used.This implementation shells out to the Linux/Unix
            environment with the<code>bash -c groups</code>
            command to resolve a list of groups for a user.
        </descirption>
    </property>
    <property>
        <name>hadoop.security.dns.interface</name>
        <descirption>
            The name of the Network Interface from which the service should determine
            its host name for Kerberos login. e.g. eth2. In a multi-homed environment,
            the setting can be used to affect the _HOST substitution in the service
            Kerberos principal. If this configuration value is not set, the service will use
            its default hostname as returned by InetAddress.getLocalHost().getCanonicalHostname()

            Most clusters will not require this setting.
        </descirption>
    </property>
    <property>
        <name>hadoop.security.dns.nameserver</name>
        <descirption>
            The host name or IP address of the name server(DNS) which a service Node
            should use to determine its own host name for Kerberos Login.Requires hadoop.security.dns.interfaces

            Most clusters will not require this setting
        </descirption>
    </property>
    <property>
        <name>hadoop.security.resolver.impl</name>
        <value>org.apache.hadoop.net.DNSDomainNameResolver</value>
        <descirption>The resolver implementation used to resolve FQDN for Kerberos</descirption>
    </property>
    <property>
        <name>hadoop.security.dns.log-slow-lookups.enable</name>
        <value>false</value>
        <descirption>
            Time name lookups (via SecurityUtil) and log them if they exceed the configured threshold.
        </descirption>
    </property>
    <property>
        <name>hadoop.security.dns.log-slow-lookups.threshold.ms</name>
        <value>1000</value>
        <descirption>
            If slow lookup logging is enable,this threshold is used to decide if a
            lookup is considered slow enough to be logged.
        </descirption>
    </property>
    <property>
        <name>hadoop.security.groups.cache.secs</name>
        <value>300</value>
        <descirption>
            This is the config controlling the validity of the entries in the cache containing
            the user->group mapping. When this duration has expired, then the implementation of
            the group mapping provider is invoked to get the groups of the user and then cached back
        </descirption>
    </property>
    <property>
        <name>hadoop.security.groups.negative-cache.secs</name>
        <value>30</value>
        <descirption>
            Expiration time for entries in the negative user-to-group mapping cache,in seconds.
            This is useful when invalid users are retrying frequently. It is suggested to set a small
            value for this expiration, since a transient error in group lookup could temporarily lock
            up a legitimate user.
            Set this to zero or negative value to disable negative user-to-group mapping
        </descirption>
    </property>
    <property>
        <name>hadoop.security.groups.cache.warn.after.ms</name>
        <value>5000</value>
        <descirption>
            If looking up a single user to group takes long than this amount of
            milliseconds, we will log a warning message.
        </descirption>
    </property>
    <property>
        <name>hadoop.security.groups.cache.background.reload</name>
        <value>false</value>
        <descirption>
            Whether to reload expired user->group mappings using a background thread pool.
            If set to true, a pool of hadoop.security.groups.cache.background.reload.threads
            is created to update the cache in the background
        </descirption>
    </property>
    <property>
        <name>hadoop.security.groups.cache.background.reload.threads</name>
        <value>3</value>
        <descirption>
            Only relevant if hadoop.security.groups.cache.background.reload is true.
            Controls the number of concurrent background user->group cache entry refreshes.
            Pending refresh requests beyond this value are queued and processed when a thread
            is free.
        </descirption>
    </property>
    <property>
        <name>hadoop.security.groups.shell.command.timeout</name>
        <value>0s</value>
        <descirption>
            Used by the ShellBasedUnixGroupsMapping class,this property controls how long
            to wait for the underlying shell command that is run to fetch groups.
            Expressed in seconds ï¼ˆe.g 10s,1m,etc.),if the running command takes longer
            than the value configured,the command is aborted and the groups resolver would return
            a result of no groups found. A value of 0s (default) would mean an infinite wait
            (wait until the command exits on its own).
        </descirption>
    </property>
    <property>
        <name>hadoop.security.group.mapping.ldap.connection.timeout.ms</name>
        <value>60000</value>
        <descirption>
            This property is the connection timeout(in milliseconds) for LDAP operations,
            If the LDAP provider doesn't establish a connection within the specified period,
            it will abort the connect attempt. Non-positive value means no LDAP connection timeout is
            specified in which case it waits for the connection to establish until the underlying
            network times out.
        </descirption>
    </property>
    <property>
        <name>hadoop.security.groups.mapping.ldap.read.timeout.ms</name>
        <value>60000</value>
        <descirption>
            This property is the read timeout (in milliseconds) for LDAP operations.
            If the LDAP provider doesn't get a LDAP response within the specified period,
            it will abort the read attempt.No-positive value means no read timeout is specified
            in which case it waits for the response infinitely.
        </descirption>
    </property>
    <property>
        <name>hadoop.security.group.mapping.ldap.num.attempts</name>
        <value>3</value>
        <descirption>
            This property is the number of attempts to be made for LDAP operations.
            If this limit is exceeded,LdapGroupsMapping will return an empty group list.
        </descirption>
    </property>
    <property>
        <name>hadoop.security.group.mapping.ldap.num.attempts.before.failover</name>
    </property>
</configuration>
